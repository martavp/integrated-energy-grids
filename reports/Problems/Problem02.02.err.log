Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
m22 = linopy.Model()

# Define variables
x_w = m22.add_variables(lower=0,name="wind")
x_s = m22.add_variables(lower=0,name="solar")
x_g = m22.add_variables(lower=0,name="gas")

# Define constraints
m22.add_constraints(x_w + x_s + x_g == demand_2a, name="energy_balance")

m22.add_constraints(x_g <= gas, name="gas_cap")

m22.add_constraints(x_w <= wind * wind_cf, name="wind_cf")
m22.add_constraints(x_s <= solar * solar_cf, name="solar_cf")

# Optional:
m22.add_constraints(x_w <= wind, name="wind_cap")
m22.add_constraints(x_s <= solar, name="solar_cap")

# Objective
m22.add_objective(cost_gas*x_g, sense = "min")

# Solve
m22.solve(solver_name="gurobi")

m22.solution

------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mAssertionError[0m                            Traceback (most recent call last)
Cell [0;32mIn[5], line 24[0m
[1;32m     21[0m m22[38;5;241m.[39madd_objective(cost_gas[38;5;241m*[39mx_g, sense [38;5;241m=[39m [38;5;124m"[39m[38;5;124mmin[39m[38;5;124m"[39m)
[1;32m     23[0m [38;5;66;03m# Solve[39;00m
[0;32m---> 24[0m [43mm22[49m[38;5;241;43m.[39;49m[43msolve[49m[43m([49m[43msolver_name[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mgurobi[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m     26[0m m22[38;5;241m.[39msolution

File [0;32m/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/linopy/model.py:1143[0m, in [0;36mModel.solve[0;34m(self, solver_name, io_api, explicit_coordinate_names, problem_fn, solution_fn, log_fn, basis_fn, warmstart_fn, keep_files, env, sanitize_zeros, sanitize_infinities, slice_size, remote, progress, **solver_options)[0m
[1;32m   1140[0m     solver_name [38;5;241m=[39m available_solvers[[38;5;241m0[39m]
[1;32m   1142[0m logger[38;5;241m.[39minfo([38;5;124mf[39m[38;5;124m"[39m[38;5;124m Solve problem using [39m[38;5;132;01m{[39;00msolver_name[38;5;241m.[39mtitle()[38;5;132;01m}[39;00m[38;5;124m solver[39m[38;5;124m"[39m)
[0;32m-> 1143[0m [38;5;28;01massert[39;00m solver_name [38;5;129;01min[39;00m available_solvers, [38;5;124mf[39m[38;5;124m"[39m[38;5;124mSolver [39m[38;5;132;01m{[39;00msolver_name[38;5;132;01m}[39;00m[38;5;124m not installed[39m[38;5;124m"[39m
[1;32m   1145[0m [38;5;66;03m# reset result[39;00m
[1;32m   1146[0m [38;5;28mself[39m[38;5;241m.[39mreset_solution()

[0;31mAssertionError[0m: Solver gurobi not installed

